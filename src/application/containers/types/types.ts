// types.ts
const TYPES = {
    IUserRepository: Symbol.for("IUserRepository"),
    UserRepository: Symbol.for("UserRepository"),
    UserService: Symbol.for("UserService"),
    UserController: Symbol.for("UserController"),
    CreateUserUseCase: Symbol.for("CreateUserUseCase"),
    DeleteUserUseCase: Symbol.for("DeleteUserUseCase"),
    GetAllUsersUseCase: Symbol.for("GetAllUsersUseCase"),
    GetUserByIdUseCase: Symbol.for("GetUserByIdUseCase"),
    UpdateUserUseCase: Symbol.for("UpdateUserUseCase"),
    FindUserByEmailUseCase: Symbol.for("FindUserByEmailUseCase"),
    IsUserByContactUseCase: Symbol.for("IsUserByContactUseCase"),
    FindActiveUsersUseCase: Symbol.for("FindActiveUsersUseCase"),

    // Transfer
    ITransferRepository: Symbol.for("ITransferRepository"),
    TransferRepository: Symbol.for("TransferRepository"),
    TransferService: Symbol.for("TransferService"),
    TransferController: Symbol.for("TransferController"),
    CreateTransferUseCase: Symbol.for("CreateTransferUseCase"),
    GetAllTransfersUseCase: Symbol.for("GetAllTransfersUseCase"),
    GetTransferByIdUseCase: Symbol.for("GetTransferByIdUseCase"),
    FindTransfersByStatusUseCase: Symbol.for("FindTransfersByStatusUseCase"),
    FindTransfersByReceiverIdUseCase: Symbol.for("FindTransfersByReceiverIdUseCase"),
    FindTransfersBySenderIdUseCase: Symbol.for("FindTransfersBySenderIdUseCase"),
    UpdateTransferUseCase: Symbol.for("UpdateTransferUseCase"),
    DeleteTransferUseCase: Symbol.for("DeleteTransferUseCase"),

    // Transaction
    ITransactionRepository: Symbol.for("ITransactionRepository"),
    TransactionRepository: Symbol.for("TransactionRepository"),
    TransactionService: Symbol.for("TransactionService"),
    TransactionController: Symbol.for("TransactionController"),
    CreateTransactionUseCase: Symbol.for("CreateTransactionUseCase"),
    DeleteTransactionUseCase: Symbol.for("DeleteTransactionUseCase"),
    GetAllTransactionsUseCase: Symbol.for("GetAllTransactionsUseCase"),
    GetTransactionByIdUseCase: Symbol.for("GetTransactionByIdUseCase"),
    UpdateTransactionUseCase: Symbol.for("UpdateTransactionUseCase"),
    FindTransactionsByUserIdUseCase: Symbol.for("FindTransactionsByUserIdUseCase"),
    FindTransactionsByTypeUseCase: Symbol.for("FindTransactionsByTypeUseCase"),

    // Notification
    INotificationRepository: Symbol.for("INotificationRepository"),
    NotificationRepository: Symbol.for("NotificationRepository"),
    NotificationService: Symbol.for("NotificationService"),
    NotificationController: Symbol.for("NotificationController"),
    CreateNotificationUseCase: Symbol.for("CreateNotificationUseCase"),
    DeleteNotificationUseCase: Symbol.for("DeleteNotificationUseCase"),
    GetAllNotificationsUseCase: Symbol.for("GetAllNotificationsUseCase"),
    GetNotificationByIdUseCase: Symbol.for("GetNotificationByIdUseCase"),
    UpdateNotificationUseCase: Symbol.for("UpdateNotificationUseCase"),
    FindNotificationsByUserIdUseCase: Symbol.for("FindNotificationsByUserIdUseCase"),
    MarkNotificationAsReadUseCase: Symbol.for("MarkNotificationAsReadUseCase"),

    // Admin
    IAdminRepository: Symbol.for("IAdminRepository"),
    AdminRepository: Symbol.for("AdminRepository"),
    AdminService: Symbol.for("AdminService"),
    AdminController: Symbol.for("AdminController"),
    CreateAdminUseCase: Symbol.for("CreateAdminUseCase"),
    DeleteAdminUseCase: Symbol.for("DeleteAdminUseCase"),
    GetAllAdminsUseCase: Symbol.for("GetAllAdminsUseCase"),
    GetAdminByIdUseCase: Symbol.for("GetAdminByIdUseCase"),
    UpdateAdminUseCase: Symbol.for("UpdateAdminUseCase"),
    FindAdminByUserIdUseCase: Symbol.for("FindAdminByUserIdUseCase"),

    // Fee
    IFeeRepository: Symbol.for("IFeeRepository"),
    FeeRepository: Symbol.for("FeeRepository"),
    FeeService: Symbol.for("FeeService"),
    FeeController: Symbol.for("FeeController"),
    CreateFeeUseCase: Symbol.for("CreateFeeUseCase"),
    DeleteFeeUseCase: Symbol.for("DeleteFeeUseCase"),
    GetFeeByIdUseCase: Symbol.for("GetFeeByIdUseCase"),
    UpdateFeeUseCase: Symbol.for("UpdateFeeUseCase"),
    FindFeeByTransactionIdUseCase: Symbol.for("FindFeeByTransactionIdUseCase"),

    // Agent
    IAgentRepository: Symbol.for("IAgentRepository"),
    AgentRepository: Symbol.for("AgentRepository"),
    AgentService: Symbol.for("AgentService"),
    AgentController: Symbol.for("AgentController"),
    CreateAgentUseCase: Symbol.for("CreateAgentUseCase"),
    DeleteAgentUseCase: Symbol.for("DeleteAgentUseCase"),
    GetAllAgentsUseCase: Symbol.for("GetAllAgentsUseCase"),
    GetAgentByIdUseCase: Symbol.for("GetAgentByIdUseCase"),
    UpdateAgentUseCase: Symbol.for("UpdateAgentUseCase"),
    FindAgentByUserIdUseCase: Symbol.for("FindAgentByUserIdUseCase"),
    FindAgentsWithTransfersUseCase: Symbol.for("FindAgentsWithTransfersUseCase"),
};

export default TYPES;