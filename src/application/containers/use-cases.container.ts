import { Container } from "inversify";
import { CreateUserUseCase } from "../use-cases/user.use-cases/create-user.use-case";
import { DeleteUserUseCase } from "../use-cases/user.use-cases/delete-user.use-case";
import { GetAllUsersUseCase } from "../use-cases/user.use-cases/get-all-users.use-case";
import { GetUserByIdUseCase } from "../use-cases/user.use-cases/get-user-by-id.use-case";
import { UpdateUserUseCase } from "../use-cases/user.use-cases/update-user.use-case";
import { FindUserByEmailUseCase } from "../use-cases/user.use-cases/find-user-by-email.use-case";
import { FindActiveUsersUseCase } from "../use-cases/user.use-cases/find-active-users.use-case";
import { CreateAdminUseCase } from "../use-cases/admin.use-cases/create-admin.use-case";
import { DeleteAdminUseCase } from "../use-cases/admin.use-cases/delete-admin.use-case";
import { GetAllAdminsUseCase } from "../use-cases/admin.use-cases/get-all-admins.use-case";
import { GetAdminByIdUseCase } from "../use-cases/admin.use-cases/get-admin-by-id.use-case";
import { UpdateAdminUseCase } from "../use-cases/admin.use-cases/update-admin.use-case";
import { FindAdminByUserIdUseCase } from "../use-cases/admin.use-cases/find-admin-by-user-id.use-case";
import { CreateAgentUseCase } from "../use-cases/agent.use-cases/create-agent.use-case";
import { DeleteAgentUseCase } from "../use-cases/agent.use-cases/delete-agent.use-case";
import { GetAllAgentsUseCase } from "../use-cases/agent.use-cases/get-all-agents.use-case";
import { GetAgentByIdUseCase } from "../use-cases/agent.use-cases/get-agent-by-id.use-case";
import { UpdateAgentUseCase } from "../use-cases/agent.use-cases/update-agent.use-case";
import { FindAgentByUserIdUseCase } from "../use-cases/agent.use-cases/find-agent-by-user-id.use-case";
import { FindAgentsWithTransfersUseCase } from "../use-cases/agent.use-cases/find-agents-with-transfers.use-case";
import { CreateTransactionUseCase } from "../use-cases/transaction.use-cases/create-transaction.use-case";
import { DeleteTransactionUseCase } from "../use-cases/transaction.use-cases/delete-transaction.use-case";
import { GetAllTransactionsUseCase } from "../use-cases/transaction.use-cases/get-all-transactions.use-case";
import { GetTransactionByIdUseCase } from "../use-cases/transaction.use-cases/get-transaction-by-id.use-case";
import { UpdateTransactionUseCase } from "../use-cases/transaction.use-cases/update-transaction.use-case";
import { FindTransactionsByUserIdUseCase } from "../use-cases/transaction.use-cases/find-transactions-by-user-id.use-case";
import { FindTransactionsByTypeUseCase } from "../use-cases/transaction.use-cases/find-transactions-by-type.use-case";
import { CreateTransferUseCase } from "../use-cases/transfer.use-cases/create-transfer.use-case";
import { DeleteTransferUseCase } from "../use-cases/transfer.use-cases/delete-transfer.use-case";
import { GetAllTransfersUseCase } from "../use-cases/transfer.use-cases/get-all-transfers.use-case";
import { GetTransferByIdUseCase } from "../use-cases/transfer.use-cases/get-transfer-by-id.use-case";
import { UpdateTransferUseCase } from "../use-cases/transfer.use-cases/update-transfer.use-case";
import { FindTransfersByStatusUseCase } from "../use-cases/transfer.use-cases/find-transfers-by-status.use-case";
import { FindTransfersBySenderIdUseCase } from "../use-cases/transfer.use-cases/find-transfers-by-sender-id.use-case";
import { FindTransfersByReceiverIdUseCase } from "../use-cases/transfer.use-cases/find-transfers-by-receiver-id.use-case";
import { CreateFeeUseCase } from "../use-cases/fee.use-cases/create-fee.use-case";
import { DeleteFeeUseCase } from "../use-cases/fee.use-cases/delete-fee.use-case";
import { GetFeeByIdUseCase } from "../use-cases/fee.use-cases/get-fee-by-id.use-case";
import { UpdateFeeUseCase } from "../use-cases/fee.use-cases/update-fee.use-case";
import { FindFeeByTransactionIdUseCase } from "../use-cases/fee.use-cases/find-fee-by-transaction-id.use-case";
import { CreateNotificationUseCase } from "../use-cases/notification.use-cases/create-notification.use-case";
import { DeleteNotificationUseCase } from "../use-cases/notification.use-cases/delete-notification.use-case";
import { GetAllNotificationsUseCase } from "../use-cases/notification.use-cases/get-all-notifications.use-case";
import { GetNotificationByIdUseCase } from "../use-cases/notification.use-cases/get-notification-by-id.use-case";
import { UpdateNotificationUseCase } from "../use-cases/notification.use-cases/update-notification.use-case";
import { FindNotificationsByUserIdUseCase } from "../use-cases/notification.use-cases/find-notifications-by-user-id.use-case";
import { MarkNotificationAsReadUseCase } from "../use-cases/notification.use-cases/mark-notification-as-read.use-case";

const container = new Container();

container.bind<CreateUserUseCase>(CreateUserUseCase).toSelf();
container.bind<DeleteUserUseCase>(DeleteUserUseCase).toSelf();
container.bind<GetAllUsersUseCase>(GetAllUsersUseCase).toSelf();
container.bind<GetUserByIdUseCase>(GetUserByIdUseCase).toSelf();
container.bind<UpdateUserUseCase>(UpdateUserUseCase).toSelf();
container.bind<FindUserByEmailUseCase>(FindUserByEmailUseCase).toSelf();
container.bind<FindActiveUsersUseCase>(FindActiveUsersUseCase).toSelf();
container.bind<CreateAdminUseCase>(CreateAdminUseCase).toSelf();
container.bind<DeleteAdminUseCase>(DeleteAdminUseCase).toSelf();
container.bind<GetAllAdminsUseCase>(GetAllAdminsUseCase).toSelf();
container.bind<GetAdminByIdUseCase>(GetAdminByIdUseCase).toSelf();
container.bind<UpdateAdminUseCase>(UpdateAdminUseCase).toSelf();
container.bind<FindAdminByUserIdUseCase>(FindAdminByUserIdUseCase).toSelf();
container.bind<CreateAgentUseCase>(CreateAgentUseCase).toSelf();
container.bind<DeleteAgentUseCase>(DeleteAgentUseCase).toSelf();
container.bind<GetAllAgentsUseCase>(GetAllAgentsUseCase).toSelf();
container.bind<GetAgentByIdUseCase>(GetAgentByIdUseCase).toSelf();
container.bind<UpdateAgentUseCase>(UpdateAgentUseCase).toSelf();
container.bind<FindAgentByUserIdUseCase>(FindAgentByUserIdUseCase).toSelf();
container.bind<FindAgentsWithTransfersUseCase>(FindAgentsWithTransfersUseCase).toSelf();
container.bind<CreateTransactionUseCase>(CreateTransactionUseCase).toSelf();
container.bind<DeleteTransactionUseCase>(DeleteTransactionUseCase).toSelf();
container.bind<GetAllTransactionsUseCase>(GetAllTransactionsUseCase).toSelf();
container.bind<GetTransactionByIdUseCase>(GetTransactionByIdUseCase).toSelf();
container.bind<UpdateTransactionUseCase>(UpdateTransactionUseCase).toSelf();
container.bind<FindTransactionsByUserIdUseCase>(FindTransactionsByUserIdUseCase).toSelf();
container.bind<FindTransactionsByTypeUseCase>(FindTransactionsByTypeUseCase).toSelf();
container.bind<CreateTransferUseCase>(CreateTransferUseCase).toSelf();
container.bind<DeleteTransferUseCase>(DeleteTransferUseCase).toSelf();
container.bind<GetAllTransfersUseCase>(GetAllTransfersUseCase).toSelf();
container.bind<GetTransferByIdUseCase>(GetTransferByIdUseCase).toSelf();
container.bind<UpdateTransferUseCase>(UpdateTransferUseCase).toSelf();
container.bind<FindTransfersByStatusUseCase>(FindTransfersByStatusUseCase).toSelf();
container.bind<FindTransfersBySenderIdUseCase>(FindTransfersBySenderIdUseCase).toSelf();
container.bind<FindTransfersByReceiverIdUseCase>(FindTransfersByReceiverIdUseCase).toSelf();
container.bind<CreateFeeUseCase>(CreateFeeUseCase).toSelf();
container.bind<DeleteFeeUseCase>(DeleteFeeUseCase).toSelf();
container.bind<GetFeeByIdUseCase>(GetFeeByIdUseCase).toSelf();
container.bind<UpdateFeeUseCase>(UpdateFeeUseCase).toSelf();
container.bind<FindFeeByTransactionIdUseCase>(FindFeeByTransactionIdUseCase).toSelf();
container.bind<CreateNotificationUseCase>(CreateNotificationUseCase).toSelf();
container.bind<DeleteNotificationUseCase>(DeleteNotificationUseCase).toSelf();
container.bind<GetAllNotificationsUseCase>(GetAllNotificationsUseCase).toSelf();
container.bind<GetNotificationByIdUseCase>(GetNotificationByIdUseCase).toSelf();
container.bind<UpdateNotificationUseCase>(UpdateNotificationUseCase).toSelf();
container.bind<FindNotificationsByUserIdUseCase>(FindNotificationsByUserIdUseCase).toSelf();
container.bind<MarkNotificationAsReadUseCase>(MarkNotificationAsReadUseCase).toSelf();

export { container };
