"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.container = void 0;
require("reflect-metadata");
const inversify_1 = require("inversify");
const user_repository_impl_1 = require("../../infrastructure/persistence/user.repository.impl");
const agent_repository_impl_1 = require("../../infrastructure/persistence/agent.repository.impl");
const fee_repository_impl_1 = require("../../infrastructure/persistence/fee.repository.impl");
const transaction_repository_impl_1 = require("../../infrastructure/persistence/transaction.repository.impl");
const transfer_repository_impl_1 = require("../../infrastructure/persistence/transfer.repository.impl");
const notification_repository_impl_1 = require("../../infrastructure/persistence/notification.repository.impl");
const admin_repository_impl_1 = require("../../infrastructure/persistence/admin.repository.impl");
const container = new inversify_1.Container();
exports.container = container;
container.bind("IUserRepository").to(user_repository_impl_1.UserRepositoryImpl).inSingletonScope();
container.bind("IAgentRepository").to(agent_repository_impl_1.AgentRepositoryImpl).inSingletonScope();
container.bind("IFeeRepository").to(fee_repository_impl_1.FeeRepositoryImpl).inSingletonScope();
container.bind("ITransactionRepository").to(transaction_repository_impl_1.TransactionRepositoryImpl).inSingletonScope();
container.bind("ITransferRepository").to(transfer_repository_impl_1.TransferRepositoryImpl).inSingletonScope();
container.bind("INotificationRepository").to(notification_repository_impl_1.NotificationRepositoryImpl).inSingletonScope();
container.bind("IAdminRepository").to(admin_repository_impl_1.AdminRepositoryImpl).inSingletonScope();
